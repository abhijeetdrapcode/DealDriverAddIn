{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* eslint-disable office-addins/load-object-before-read */\n/* eslint-disable office-addins/call-sync-before-read */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nlet categoryData = {\n  closing: [],\n  postClosing: [],\n  representation: [],\n};\nlet allParagraphsData = [];\nlet isDataLoaded = false;\n\n//login variable\nlet isLoggedIn = false;\n// let authToken = \"\";\n//login variable\n\nconst dealSelect = document.getElementById(\"dealSelect\");\nconst sendDealButton = document.getElementById(\"sendDealButton\");\n\nlet documentContentHash = \"\";\n// let documentParagraphsState = [];\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    const logStyleContentButton = document.getElementById(\"logStyleContentButton\");\n    const categorySelect = document.getElementById(\"categorySelect\");\n    const reloadButton = document.getElementById(\"reloadButton\");\n    const dismissButton = document.getElementById(\"dismissNotification\");\n\n    //dropdown after login\n    const dealOptions = document.getElementById(\"dealOptions\");\n\n    //dropdown after login\n\n    logStyleContentButton.disabled = true;\n    logStyleContentButton.onclick = getListInfoFromSelection;\n    document.getElementById(\"clearContentButton\").onclick = clearCurrentContent;\n    reloadButton.onclick = handleReloadContent;\n    if (dismissButton) {\n      dismissButton.onclick = dismissChangeNotification;\n    }\n\n    categorySelect.onchange = handleCategoryChange;\n    handleCategoryChange();\n\n    setInitialContentHash();\n    setInterval(checkForDocumentChanges, 2000);\n\n    loadAllParagraphsData();\n\n    //Login\n\n    const loginButton = document.getElementById(\"loginButton\");\n    const loginModal = document.getElementById(\"loginModal\");\n    const loginForm = document.getElementById(\"loginForm\");\n    const closeModal = document.querySelector(\".close-modal\");\n    const loginError = document.getElementById(\"loginError\");\n\n    // Login button click handler\n    loginButton.addEventListener(\"click\", () => {\n      if (!isLoggedIn) {\n        loginModal.style.display = \"block\";\n      } else {\n        // Handle logout\n        isLoggedIn = false;\n        authToken = null;\n        localStorage.removeItem(\"authToken\");\n        loginButton.textContent = \"Login To Deal Driver\";\n        dealOptions.style.display = \"none\";\n        const mainContent = document.getElementById(\"mainContent\");\n        mainContent.classList.add(\"hidden\");\n      }\n    });\n\n    // Close modal handlers\n    closeModal.addEventListener(\"click\", () => {\n      loginModal.style.display = \"none\";\n      loginError.style.display = \"none\";\n    });\n\n    window.addEventListener(\"click\", (event) => {\n      if (event.target === loginModal) {\n        loginModal.style.display = \"none\";\n        loginError.style.display = \"none\";\n      }\n    });\n\n    // Login form submission handler\n    loginForm.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n\n      const userName = document.getElementById(\"userName\").value;\n      const password = document.getElementById(\"password\").value;\n\n      const loginSuccess = await handleLogin(userName, password);\n      if (loginSuccess) {\n        isLoggedIn = true;\n        loginButton.textContent = \"Logout\";\n        loginModal.style.display = \"none\";\n        loginError.style.display = \"none\";\n        loginForm.reset();\n\n        // Show the deal options dropdown and button\n        dealOptions.style.display = \"block\";\n      } else {\n        loginError.style.display = \"block\";\n      }\n    });\n    //Login\n  }\n});\nasync function setInitialContentHash() {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.load(\"text\");\n      await context.sync();\n      documentContentHash = await calculateHash(body.text);\n    });\n  } catch (error) {\n    console.error(\"Error setting initial content hash:\", error);\n  }\n}\n\nfunction dismissChangeNotification() {\n  const changeNotification = document.getElementById(\"changeNotification\");\n  if (changeNotification) {\n    changeNotification.style.display = \"none\";\n  }\n}\nasync function calculateHash(text) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(text);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\nasync function checkForDocumentChanges() {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.load(\"text\");\n      await context.sync();\n\n      const currentHash = await calculateHash(body.text);\n\n      if (currentHash !== documentContentHash) {\n        documentContentHash = currentHash;\n        const changeNotification = document.getElementById(\"changeNotification\");\n        if (changeNotification) {\n          changeNotification.style.display = \"block\";\n        }\n      }\n    });\n  } catch (error) {\n    console.error(\"Error checking for document changes:\", error);\n  }\n}\nasync function handleReloadContent() {\n  const changeNotification = document.getElementById(\"changeNotification\");\n  if (changeNotification) {\n    changeNotification.style.display = \"none\";\n  }\n  await setInitialContentHash();\n  await loadAllParagraphsData();\n  // await loadArticleStructuredData();\n}\n\nasync function handleCategoryChange() {\n  const categorySelect = document.getElementById(\"categorySelect\");\n  const selectedCategory = categorySelect.value;\n\n  document.querySelectorAll(\".category-content\").forEach((section) => {\n    section.classList.remove(\"active\");\n  });\n\n  const contentId = `${selectedCategory}Content`;\n  document.getElementById(contentId).classList.add(\"active\");\n\n  document.getElementById(\"logStyleContentButton\").disabled = !isDataLoaded || !selectedCategory;\n\n  if (selectedCategory && categoryData[selectedCategory]) {\n    const clipboardString = formatCategoryData(selectedCategory);\n    await silentCopyToClipboard(clipboardString);\n  }\n}\n\nasync function silentCopyToClipboard(text) {\n  try {\n    await navigator.clipboard.writeText(text);\n  } catch (err) {\n    console.log(\"Fallback: using execCommand for copy\");\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.left = \"-9999px\";\n    textArea.style.top = \"-9999px\";\n    document.body.appendChild(textArea);\n\n    try {\n      textArea.select();\n      document.execCommand(\"copy\");\n    } catch (err) {\n      console.error(\"Failed to copy text:\", err);\n    } finally {\n      document.body.removeChild(textArea);\n    }\n  }\n}\n\nfunction normalizeText(text) {\n  return text\n    .trim()\n    .replace(/^\\.\\s*/, \"\")\n    .replace(/\\s+/g, \" \")\n    .replace(/[^\\x20-\\x7E]/g, \"\");\n}\n\nasync function loadAllParagraphsData() {\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      const paragraphs = body.paragraphs;\n\n      // Load all paragraph data\n      paragraphs.load(\"items, items/text, items/isListItem\");\n      await context.sync();\n\n      let parentNumbering = [];\n      let lastNumbering = \"\";\n      const today = new Date().toISOString().split(\"T\")[0]; // Get current date (YYYY-MM-DD)\n\n      // Disable button and set loading state\n      document.getElementById(\"logStyleContentButton\").disabled = true;\n      isDataLoaded = false;\n\n      // Load list item details\n      const listItems = paragraphs.items.filter((p) => p.isListItem);\n      listItems.forEach((item) => item.listItem.load(\"level, listString\"));\n      await context.sync(); // Sync all list item data at once\n\n      for (let i = 0; i < paragraphs.items.length; i++) {\n        const paragraph = paragraphs.items[i];\n        const text = normalizeText(paragraph.text);\n\n        if (text.length <= 1) continue; // Skip empty/single-character paragraphs\n\n        let existingItem = allParagraphsData.find((item) => item.index === i);\n        let revisedKey = \"\";\n\n        if (paragraph.isListItem) {\n          const listItem = paragraph.listItem;\n          const level = listItem.level;\n          const listString = listItem.listString || \"\";\n\n          // Update parent numbering\n          if (level <= parentNumbering.length) {\n            parentNumbering = parentNumbering.slice(0, level);\n          }\n          parentNumbering[level] = listString;\n\n          // Generate full numbering\n          const fullNumbering = parentNumbering\n            .slice(0, level + 1)\n            .filter(Boolean)\n            .join(\".\");\n          lastNumbering = fullNumbering;\n\n          // Check if the content has changed\n          if (existingItem && existingItem.value !== text) {\n            revisedKey = `${fullNumbering} [Revised ${today}]`;\n          } else {\n            revisedKey = fullNumbering;\n          }\n\n          allParagraphsData.push({\n            key: revisedKey,\n            value: text,\n            originalText: paragraph.text.trim().replace(/^\\.\\s*/, \"\"),\n            isListItem: true,\n            index: i,\n            level: level,\n            listString: listString,\n            parentNumbers: [...parentNumbering],\n          });\n        } else {\n          const baseKey = lastNumbering ? `${lastNumbering} (text)` : `text_${i + 1}`;\n\n          // Check if the content has changed\n          if (existingItem && existingItem.value !== text) {\n            revisedKey = `${baseKey} [Revised ${today}]`;\n          } else {\n            revisedKey = baseKey;\n          }\n\n          allParagraphsData.push({\n            key: revisedKey,\n            value: text,\n            originalText: paragraph.text.trim().replace(/^\\.\\s*/, \"\"),\n            isListItem: false,\n            index: i,\n            level: -1,\n          });\n        }\n      }\n\n      // Remove unwanted keys ending with \".text\"\n      allParagraphsData = allParagraphsData.filter((item) => !item.key.endsWith(\".text\"));\n\n      console.log(\"All paragraphs data loaded:\", allParagraphsData);\n\n      // Enable the log button if a category is selected\n      const categorySelect = document.getElementById(\"categorySelect\");\n      document.getElementById(\"logStyleContentButton\").disabled = !categorySelect.value;\n      isDataLoaded = true;\n    });\n  } catch (error) {\n    console.error(\"An error occurred while loading all paragraphs data:\", error);\n    if (error instanceof OfficeExtension.Error) {\n      console.error(\"Debug info:\", error.debugInfo);\n    }\n    document.getElementById(\"logStyleContentButton\").disabled = true;\n    isDataLoaded = false;\n  }\n}\n\nasync function getListInfoFromSelection() {\n  if (!isDataLoaded) {\n    console.log(\"Data is still loading. Please wait.\");\n    return;\n  }\n\n  const selectedCategory = document.getElementById(\"categorySelect\").value;\n  console.log(\"Selected Category:\", selectedCategory); // Debugging log\n\n  if (!selectedCategory) {\n    console.log(\"No category selected\");\n    return;\n  }\n\n  try {\n    await Word.run(async (context) => {\n      const selection = context.document.getSelection();\n      const paragraphs = selection.paragraphs;\n\n      // Load all required properties for paragraphs\n      paragraphs.load(\"items\");\n      await context.sync();\n\n      // Collect properties for all paragraphs at once\n      const paragraphPromises = paragraphs.items.map((paragraph) => {\n        paragraph.load(\"text,isListItem\");\n        if (paragraph.isListItem) {\n          paragraph.listItem.load(\"level,listString\");\n        }\n        return paragraph;\n      });\n\n      await context.sync();\n\n      let newSelections = [];\n\n      for (const paragraph of paragraphs.items) {\n        const selectedText = paragraph.text.trim().replace(/^\\.\\s*/, \"\");\n        const normalizedSelectedText = normalizeText(selectedText);\n\n        const matchingParagraphs = allParagraphsData.filter(\n          (para) => para.value === normalizedSelectedText || para.originalText === selectedText\n        );\n\n        if (matchingParagraphs.length > 0) {\n          let bestMatch = matchingParagraphs[0];\n\n          if (matchingParagraphs.length > 1 && paragraph.isListItem) {\n            const selectedLevel = paragraph.listItem.level;\n            const selectedListString = paragraph.listItem.listString;\n\n            const exactMatch = matchingParagraphs.find(\n              (para) =>\n                para.isListItem &&\n                para.level === selectedLevel &&\n                para.listString === selectedListString\n            );\n\n            if (exactMatch) {\n              bestMatch = exactMatch;\n            }\n          }\n\n          const isDuplicate = categoryData[selectedCategory].some(\n            (item) => item.key === bestMatch.key && item.value === bestMatch.value\n          );\n\n          if (!isDuplicate) {\n            if (selectedCategory === \"closing\" || selectedCategory === \"postClosing\") {\n              // Ensure bestMatch.key is defined before splitting\n              if (bestMatch.key) {\n                const keyParts = bestMatch.key.split(/(?<=^[^\\d]+)(?=\\d)/);\n                const mainHeadingKey = keyParts[0].trim().replace(/\\.$/, \"\");\n                const sectionHeading = bestMatch.key.trim();\n                const content = bestMatch.value.trim();\n\n                const matchedParagraph = allParagraphsData.find(\n                  (para) => para.key.trim() === mainHeadingKey\n                );\n\n                const fullMainHeading = matchedParagraph\n                  ? mainHeadingKey + \" \" + matchedParagraph.value\n                  : mainHeadingKey;\n\n                newSelections.push({\n                  mainHeading: fullMainHeading,\n                  sectionHeading: sectionHeading,\n                  content: content,\n                });\n              } else {\n                console.error(\"bestMatch.key is undefined, skipping 'closing' category handling.\");\n              }\n            } else {\n              newSelections.push({\n                key: bestMatch.key,\n                value: bestMatch.value,\n              });\n            }\n          }\n        }\n      }\n\n      if (newSelections.length > 0) {\n        categoryData[selectedCategory] = [...categoryData[selectedCategory], ...newSelections];\n\n        // Sort keys numerically\n        categoryData[selectedCategory].sort((a, b) => {\n          const aNumbers = a.key ? a.key.split(\".\").map((num) => parseInt(num)) : [];\n          const bNumbers = b.key ? b.key.split(\".\").map((num) => parseInt(num)) : [];\n\n          for (let i = 0; i < Math.max(aNumbers.length, bNumbers.length); i++) {\n            if (isNaN(aNumbers[i])) return 1;\n            if (isNaN(bNumbers[i])) return -1;\n            if (aNumbers[i] !== bNumbers[i]) return aNumbers[i] - bNumbers[i];\n          }\n          return 0;\n        });\n\n        updateCategoryDisplay(selectedCategory);\n\n        let clipboardString;\n        if (selectedCategory === \"closing\" || selectedCategory === \"postClosing\") {\n          console.log(\"Formatting closing checklist data\");\n          clipboardString = formatClosingChecklistData(selectedCategory);\n        } else {\n          clipboardString = formatCategoryData(selectedCategory);\n        }\n\n        await copyToClipboard(clipboardString);\n\n        console.log(`Updated ${selectedCategory} data:`, categoryData[selectedCategory]);\n      }\n    });\n  } catch (error) {\n    console.error(\"An error occurred while processing selection:\", error);\n    if (error instanceof OfficeExtension.Error) {\n      console.error(\"Debug info:\", error.debugInfo);\n    }\n  }\n}\n\nfunction formatCategoryData(category) {\n  if (!categoryData[category] || !Array.isArray(categoryData[category])) {\n    console.error(\"Invalid category data for:\", category);\n    return \"{}\";\n  }\n\n  if (category === \"closing\" || category === \"postClosing\") {\n    return formatClosingChecklistData(category);\n  }\n  const pairs = categoryData[category]\n    .map((pair) => `\"${pair.key}\": \"${pair.value.replace(/\"/g, '\\\\\"')}\"`)\n    .join(\",\\n\");\n\n  return `{\\n${pairs}\\n}`;\n}\n\nfunction formatClosingChecklistData(selectedCategory) {\n  const selections = categoryData[selectedCategory];\n\n  // Validate if selections exist and is an array\n  if (!Array.isArray(selections)) {\n    console.error(\"Invalid selections data for category:\", selectedCategory);\n    return \"{}\";\n  }\n\n  // Create an object to store grouped data\n  const formattedData = {};\n\n  selections.forEach((selection) => {\n    // Validate required fields\n    if (!selection.mainHeading || !selection.sectionHeading || !selection.content) {\n      console.error(\"Missing data in selection:\", selection);\n      return; // Skip this selection if required fields are missing\n    }\n\n    // Normalize and trim data\n    const mainHeading = selection.mainHeading.trim();\n    const sectionHeading = selection.sectionHeading.trim();\n    const content = selection.content.trim();\n\n    // Split sectionHeading into parts for hierarchical structure\n    const sectionKeyParts = sectionHeading.split(\".\").map((part) => part.trim());\n    const mainHeadingKeyParts = mainHeading.split(\".\").map((part) => part.trim());\n\n    // Validate section parts\n    if (sectionKeyParts.length === 0 || mainHeadingKeyParts.length === 0) {\n      console.error(\"Invalid section heading or main heading format:\", selection);\n      return; // Skip this selection if the format is invalid\n    }\n\n    // Initialize main heading object if it doesn't exist\n    if (!formattedData[mainHeading]) {\n      formattedData[mainHeading] = {\n        title: mainHeading,\n        sections: [],\n      };\n    }\n\n    // Add section to the main heading\n    formattedData[mainHeading].sections.push({\n      sectionHeading: sectionHeading,\n      content: content,\n    });\n  });\n\n  // Convert to formatted JSON string before returning\n  return JSON.stringify(formattedData, null, 2);\n}\n\n// function updateCategoryDisplay(category) {\n//   const contentElement = document.querySelector(`#${category}Content .content-area`);\n//   if (!contentElement) {\n//     console.error(\"Content element not found for category:\", category);\n//     return;\n//   }\n//   console.log(\"Closing array: \", categoryData);\n//   contentElement.innerHTML = \"\";\n\n//   if (categoryData[category]) {\n//     categoryData[category].forEach((pair) => {\n//       const keySpan = `<span class=\"key\">${pair.key}</span>`;\n//       const valueSpan = `<span class=\"value\">${pair.value}</span>`;\n//       const formattedPair = `<div class=\"pair\">${keySpan}: ${valueSpan}</div>`;\n//       contentElement.innerHTML += formattedPair;\n//     });\n//   }\n// }\n\nfunction updateCategoryDisplay(category) {\n  const contentElement = document.querySelector(`#${category}Content .content-area`);\n  if (!contentElement) {\n    console.error(\"Content element not found for category:\", category);\n    return;\n  }\n\n  console.log(`${category} array:`, categoryData); // Debugging log to see the data\n  contentElement.innerHTML = \"\"; // Clear any existing content\n\n  // Check if category data exists\n  if (categoryData[category]) {\n    categoryData[category].forEach((pair) => {\n      // For closing category, map the fields to key-value format\n      if (category === \"closing\" || category === \"postClosing\") {\n        const entries = [\n          { key: \"Article\", value: pair.mainHeading },\n          { key: \"Section\", value: pair.sectionHeading },\n          { key: \"Clause\", value: pair.content },\n        ];\n\n        entries.forEach((entry) => {\n          const keySpan = `<span class=\"key\">${entry.key}</span>`;\n          const valueSpan = `<span class=\"value\">${entry.value}</span>`;\n          const formattedPair = `<div class=\"pair\">${keySpan}: ${valueSpan}</div>`;\n          contentElement.innerHTML += formattedPair;\n        });\n\n        contentElement.innerHTML += \"<br><br>\"; // Add spacing between entry groups\n      } else {\n        const keySpan = `<span class=\"key\">${pair.key}</span>`;\n        const valueSpan = `<span class=\"value\">${pair.value}</span>`;\n        const formattedPair = `<div class=\"pair\">${keySpan}: ${valueSpan}</div>`;\n        contentElement.innerHTML += formattedPair;\n      }\n    });\n  }\n}\nasync function copyToClipboard(text) {\n  if (!text) {\n    console.error(\"No text provided to copy\");\n    showCopyMessage(false);\n    return;\n  }\n\n  try {\n    await navigator.clipboard.writeText(text);\n    showCopyMessage(true);\n  } catch (err) {\n    console.log(\"Fallback: using execCommand for copy\");\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.left = \"-9999px\";\n    textArea.style.top = \"-9999px\";\n    document.body.appendChild(textArea);\n\n    try {\n      textArea.select();\n      const successful = document.execCommand(\"copy\");\n      showCopyMessage(successful);\n    } catch (err) {\n      console.error(\"Failed to copy text:\", err);\n      showCopyMessage(false);\n    } finally {\n      document.body.removeChild(textArea);\n    }\n  }\n}\n\nfunction showCopyMessage(successful) {\n  const copyMessage = document.getElementById(\"copyMessage\");\n  if (!copyMessage) {\n    console.error(\"Copy message element not found\");\n    return;\n  }\n\n  copyMessage.style.display = \"block\";\n  copyMessage.textContent = successful\n    ? \"Content added and copied to clipboard!\"\n    : \"Failed to copy content\";\n  copyMessage.style.color = successful ? \"green\" : \"red\";\n\n  setTimeout(() => {\n    copyMessage.style.display = \"none\";\n  }, 3000);\n}\n\nasync function clearCurrentContent() {\n  const selectedCategory = document.getElementById(\"categorySelect\").value;\n  if (!selectedCategory) {\n    console.log(\"No category selected\");\n    return;\n  }\n\n  categoryData[selectedCategory] = [];\n\n  const contentElement = document.querySelector(`#${selectedCategory}Content .content-area`);\n  if (contentElement) {\n    contentElement.innerHTML = \"\";\n  }\n\n  const clipboardString = \"{}\";\n  await silentCopyToClipboard(clipboardString);\n\n  console.log(`Cleared content for category: ${selectedCategory}`);\n}\n\n//Login\n// Global variable to store login response\nlet loginResponseData = null;\nlet selectedEnvironment;\nasync function handleLogin(userName, password) {\n  try {\n    // Get selected environment from the dropdown\n    const environmentSelect = document.getElementById(\"environmentSelect\");\n    selectedEnvironment = environmentSelect.value;\n    console.log(\"This is the selected Environment: \", selectedEnvironment);\n    // Determine the API URL based on the selected environment\n    const apiUrl =\n      selectedEnvironment === \"production\"\n        ? \"https://deal-driver-20245869.api.drapcode.io/api/v1/developer/login\"\n        : selectedEnvironment === \"preview\"\n          ? \"https://deal-driver-20245869.api.preview.drapcode.io/api/v1/developer/login\"\n          : \"https://deal-driver-20245869.api.sandbox.drapcode.io/api/v1/developer/login\";\n\n    const response = await fetch(apiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        userName,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      console.log(\"This is the API response data\", data);\n\n      // Save to localStorage\n      localStorage.setItem(\"loginResponseData\", JSON.stringify(data));\n\n      // Set global variable\n      loginResponseData = data;\n      console.log(\"This is the login response variable: \", loginResponseData);\n\n      // Save token to localStorage\n      localStorage.setItem(\"authToken\", data.token);\n\n      // Extract deal names from the response\n      // const dealNames = data.userDetails?.deal_name || [];\n      const dealNames = data.userDetails?.tenantId || [];\n\n      // Populate the dropdown\n      const dealSelect = document.getElementById(\"dealSelect\");\n      dealSelect.innerHTML = \"\";\n\n      dealNames.forEach((deal) => {\n        const option = document.createElement(\"option\");\n        option.value = deal._id;\n        console.log(\"These are the option value \", option.value);\n        option.textContent = deal.name;\n        dealSelect.appendChild(option);\n      });\n\n      // Show the deal options section if deals exist\n      if (dealNames.length > 0) {\n        document.getElementById(\"dealOptions\").style.display = \"block\";\n      } else {\n        document.getElementById(\"dealOptions\").style.display = \"none\";\n      }\n\n      // Remove hidden class from main content\n      const mainContent = document.getElementById(\"mainContent\");\n      mainContent.classList.remove(\"hidden\");\n\n      return true;\n    } else {\n      console.error(\"Login failed with status:\", response.status);\n      return false;\n    }\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return false;\n  }\n}\n\n//This is where the change of data has to be made\nsendDealButton.addEventListener(\"click\", async () => {\n  // Create or select the message element\n  let messageElement = document.getElementById(\"dealSendMessage\");\n  if (!messageElement) {\n    messageElement = document.createElement(\"div\");\n    messageElement.id = \"dealSendMessage\";\n    messageElement.style.position = \"absolute\";\n    messageElement.style.top = \"-50px\"; // Position above the button\n    messageElement.style.left = \"0\";\n    messageElement.style.width = \"100%\";\n    messageElement.style.padding = \"10px\";\n    messageElement.style.textAlign = \"center\";\n    messageElement.style.transition = \"top 0.3s ease\";\n    sendDealButton.parentNode.insertBefore(messageElement, sendDealButton);\n  }\n\n  // Function to show message\n  const showMessage = (message, isError = false) => {\n    messageElement.textContent = message;\n    messageElement.style.backgroundColor = isError ? \"#ffdddd\" : \"#ddffdd\";\n    messageElement.style.color = isError ? \"red\" : \"green\";\n    messageElement.style.top = \"0\";\n\n    // Hide message after 9 seconds\n    setTimeout(() => {\n      messageElement.style.top = \"-50px\";\n    }, 9000);\n  };\n\n  // Disable the send button and add visual feedback\n  sendDealButton.disabled = true;\n  sendDealButton.style.opacity = \"0.5\";\n  sendDealButton.style.cursor = \"not-allowed\";\n\n  try {\n    const selectedDealName = dealSelect.options[dealSelect.selectedIndex].text;\n    const selectedCategory = document.getElementById(\"categorySelect\").value;\n    console.log(\"This is the selected category: \", selectedCategory);\n    const loginResponseDataString = localStorage.getItem(\"loginResponseData\");\n    // const environmentSelect = document.getElementById(\"environmentSelect\");\n    const selectedEnvironmentValue = selectedEnvironment;\n    console.log(\"Backend for selecting env: \", selectedEnvironment);\n\n    if (!loginResponseDataString) {\n      showMessage(\"Login data not found\", true);\n      return;\n    }\n\n    const loginResponseData = JSON.parse(loginResponseDataString);\n    // const dealsArray = loginResponseData.userDetails.deal_name || [];\n    const dealsArray = loginResponseData.userDetails.tenantId || [];\n    console.log(\"This is the dealsArray which contains all the data: \", dealsArray);\n    const matchedDeal = dealsArray.find((deal) => deal.name === selectedDealName);\n    console.log(\"This is the matched Deal: \", matchedDeal);\n\n    if (!matchedDeal) {\n      showMessage(\"Could not find matching deal\", true);\n      return;\n    }\n    const matchedDealSettingUUID = matchedDeal.deal[0].deal_user_setting;\n    console.log(\"This is the matchedDealSettingUUID: \", matchedDealSettingUUID);\n    let baseUrl;\n    let finalData;\n    if (selectedEnvironmentValue === \"sandbox\") {\n      baseUrl = \"https://deal-driver-20245869.api.sandbox.drapcode.io\";\n    } else if (selectedEnvironmentValue === \"preview\") {\n      baseUrl = \"https://deal-driver-20245869.api.preview.drapcode.io\";\n    } else if (selectedEnvironmentValue === \"production\") {\n      baseUrl = \"https://deal-driver-20245869.api.drapcode.io\";\n    }\n\n    console.log(\"This is the base url : \", baseUrl);\n    if (baseUrl) {\n      const dealSettingData = await fetch(\n        `${baseUrl}/api/v1/developer/collection/user_setting/item/${matchedDealSettingUUID}`\n      );\n      finalData = await dealSettingData.json();\n      console.log(\"This is the dealSettingData: \", finalData);\n    } else {\n      console.error(\"Invalid environment selected.\");\n    }\n\n    // Extract the permissions array\n    // const permissionArray = [];\n    console.log(\"This is the final data before giving any error: \", finalData);\n    const permissionArray = finalData.permissions || [];\n\n    // Filter permissions containing \"_AREA\"\n    const requiredPermissions = [\n      \"CREATE_POST_CLOSING_CHECKLIST\",\n      \"CREATE_REPRESENTATION_WARRANTY\",\n      \"CREATE_REVISED_CLOSING_CHECKLIST\",\n    ];\n    const areaPermissions = permissionArray.filter((permission) =>\n      requiredPermissions.includes(permission)\n    );\n    console.log(\"Filtered AREA Permissions: \", areaPermissions);\n\n    const dealUuid = matchedDeal.deal[0].uuid;\n    console.log(\"This is matched deal id: \", matchedDeal.deal[0].uuid);\n    const tenantId = loginResponseData.tenant.uuid;\n\n    if (selectedCategory === \"closing\") {\n      const response = await fetch(\"https://dealdriverapi.drapcode.co/addClosingData\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          dealId: dealUuid,\n          tenantId: tenantId,\n          environment: selectedEnvironmentValue,\n          permissions: areaPermissions,\n        },\n        body: formatClosingChecklistData(selectedCategory),\n      });\n      console.log(\n        \"This is the body of the data being sent in the localhost: \",\n        formatClosingChecklistData(selectedCategory)\n      );\n      if (response.ok) {\n        const responseData = await response.json();\n        showMessage(`${selectedCategory} data sent successfully to ${selectedDealName}`);\n        console.log(\"Server response:\", responseData);\n      } else {\n        const errorData = await response.text();\n        showMessage(\"Error while sending the data\", true);\n        console.error(`Failed to send deal. Status: ${response.status}`);\n        console.error(\"Error details:\", errorData);\n      }\n      console.log(\"This is the response data of the preview api\", response);\n    } else if (selectedCategory === \"postClosing\") {\n      //This is the code for sending the data to post closing\n      const response = await fetch(\"https://dealdriverapi.drapcode.co/addPostClosingData\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          dealId: dealUuid,\n          tenantId: tenantId,\n          environment: selectedEnvironmentValue,\n          permissions: areaPermissions,\n        },\n        body: formatClosingChecklistData(selectedCategory),\n      });\n      console.log(\n        \"This is the body of the data being sent in the localhost: \",\n        formatClosingChecklistData(selectedCategory)\n      );\n      if (response.ok) {\n        const responseData = await response.json();\n        showMessage(`${selectedCategory} data sent successfully to ${selectedDealName}`);\n        console.log(\"Server response:\", responseData);\n      } else {\n        const errorData = await response.text();\n        showMessage(\"Error while sending the data\", true);\n        console.error(`Failed to send deal. Status: ${response.status}`);\n        console.error(\"Error details:\", errorData);\n      }\n      console.log(\"This is the response data of the preview api\", response);\n      console.log(\"The selected Category is post closing\");\n    } else {\n      const formattedCategoryData = categoryData[selectedCategory].reduce((acc, item) => {\n        acc[item.key] = item.value;\n        return acc;\n      }, {});\n      console.log(\n        \"This the formattedCategoryData that is being parsed before sending to the api: \",\n        formattedCategoryData\n      );\n      //This is the api call being made for R&W\n      const response = await fetch(\"https://dealdriverapi.drapcode.co/parseWord\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          dealId: dealUuid,\n          tenantId: tenantId,\n          environment: selectedEnvironmentValue,\n          permissions: areaPermissions,\n        },\n        body: JSON.stringify(formattedCategoryData),\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        showMessage(`${selectedCategory} data sent successfully to ${selectedDealName}`);\n        console.log(\"Server response:\", responseData);\n      } else {\n        const errorData = await response.text();\n        showMessage(errorData, true);\n        console.error(`Failed to send deal. Status: ${response.status}`);\n        console.error(\"Error details:\", errorData);\n      }\n    }\n  } catch (error) {\n    showMessage(\"Error sending deal\", true);\n    console.error(\"Error sending deal:\", error);\n  } finally {\n    // Re-enable the send button\n    sendDealButton.disabled = false;\n    sendDealButton.style.opacity = \"1\";\n    sendDealButton.style.cursor = \"pointer\";\n  }\n});\n\nfunction togglePassword() {\n  var toggler = document.getElementById(\"password\");\n  if (toggler.type === \"password\") {\n    toggler.type = \"text\";\n  } else {\n    toggler.type = \"password\";\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!doctype html> <html> <head> <meta charset=\\\"utf-8\\\"/> <title>Word Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"/> <style>.hidden{display:none}</style> </head> <body> <div class=\\\"container\\\"> <div style=\\\"text-align:right;padding:10px\\\"> <button id=\\\"loginButton\\\" class=\\\"small-text\\\">Login To Deal Driver</button> </div> <div id=\\\"loginModal\\\" class=\\\"modal\\\"> <div class=\\\"modal-content\\\"> <span class=\\\"close-modal\\\">&times;</span> <h2>Login</h2> <form id=\\\"loginForm\\\" class=\\\"login-form\\\"> <label for=\\\"environmentSelect\\\">Select Environment:</label> <select id=\\\"environmentSelect\\\" required> <option value=\\\"production\\\">Production</option> <option value=\\\"sandbox\\\">Sandbox</option> <option value=\\\"preview\\\">Preview</option> </select> <input type=\\\"text\\\" id=\\\"userName\\\" placeholder=\\\"Email\\\" required/> <input type=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required/> <button type=\\\"submit\\\">Login</button> </form> <div id=\\\"loginError\\\" class=\\\"login-error hidden\\\">Invalid username or password</div> </div> </div> <div id=\\\"mainContent\\\" class=\\\"hidden\\\"> <div id=\\\"dealOptions\\\"> <label for=\\\"dealSelect\\\">Select Deal:</label> <select id=\\\"dealSelect\\\"> </select> <button id=\\\"sendDealButton\\\">Send Data</button> </div> <div id=\\\"changeNotification\\\"> <div class=\\\"notification-content\\\"> <div style=\\\"display:flex;align-items:center;gap:1rem\\\"> <span style=\\\"font-size:.95rem;font-weight:700;color:#1a202c;letter-spacing:-.01em\\\">The content of the document has been updated</span> <button id=\\\"reloadButton\\\">Reload</button> </div> <button id=\\\"dismissNotification\\\"> <span style=\\\"line-height:1\\\">&times;</span> </button> </div> </div> <div id=\\\"copyMessage\\\" class=\\\"hidden\\\">Text has been copied successfully!</div> <div class=\\\"control-group\\\"> <select id=\\\"categorySelect\\\" class=\\\"small-text\\\"> <option value=\\\"representation\\\" selected=\\\"selected\\\">Representation and Warranty</option> <option value=\\\"closing\\\">Closing Checklist</option> <option value=\\\"postClosing\\\">Post Closing</option> </select> <button id=\\\"logStyleContentButton\\\" class=\\\"small-text\\\">Copy Selected Text</button> <button id=\\\"clearContentButton\\\" class=\\\"small-text\\\" style=\\\"background-color:#da0f00\\\">Clear</button> </div> <div class=\\\"content-sections\\\"> <div id=\\\"closingContent\\\" class=\\\"category-content\\\"> <h3>Closing Checklist</h3> <pre class=\\\"content-area\\\"></pre> </div> <div id=\\\"postClosingContent\\\" class=\\\"category-content\\\"> <h3>Post Closing</h3> <pre class=\\\"content-area\\\"></pre> </div> <div id=\\\"representationContent\\\" class=\\\"category-content\\\"> <h3>Representation and Warranty</h3> <pre class=\\\"content-area\\\"></pre> </div> </div> </div> </div></body></html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","categoryData","closing","postClosing","representation","allParagraphsData","isDataLoaded","isLoggedIn","dealSelect","getElementById","sendDealButton","documentContentHash","setInitialContentHash","_setInitialContentHash","_callee4","_t2","_context4","Word","run","_ref3","_callee3","context","body","_context3","load","sync","calculateHash","text","_x7","console","error","dismissChangeNotification","changeNotification","style","display","_x2","_calculateHash","_callee5","encoder","data","hashBuffer","hashArray","_context5","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","toString","padStart","join","checkForDocumentChanges","_checkForDocumentChanges","_callee7","_t3","_context7","_ref4","_callee6","currentHash","_context6","_x8","handleReloadContent","_handleReloadContent","_callee8","_context8","loadAllParagraphsData","handleCategoryChange","_handleCategoryChange","_callee9","categorySelect","selectedCategory","contentId","clipboardString","_context9","querySelectorAll","forEach","section","classList","remove","concat","add","disabled","formatCategoryData","silentCopyToClipboard","_x3","_silentCopyToClipboard","_callee0","textArea","_context0","navigator","clipboard","writeText","log","createElement","position","left","top","appendChild","select","execCommand","err","removeChild","normalizeText","trim","_loadAllParagraphsData","_callee10","_t5","_context11","_ref5","_callee1","paragraphs","parentNumbering","lastNumbering","today","_loop","_context10","Date","toISOString","split","items","filter","isListItem","item","listItem","paragraph","existingItem","revisedKey","level","listString","fullNumbering","baseKey","_context1","find","index","slice","Boolean","push","key","originalText","parentNumbers","_toConsumableArray","_regeneratorValues","endsWith","_x9","OfficeExtension","debugInfo","getListInfoFromSelection","_getListInfoFromSelection","_callee12","_t7","_context14","_ref6","_callee11","selection","newSelections","_iterator","_step","_loop2","_t6","_context13","getSelection","_createForOfIteratorHelper","selectedText","normalizedSelectedText","matchingParagraphs","bestMatch","selectedLevel","selectedListString","exactMatch","keyParts","mainHeadingKey","sectionHeading","content","matchedParagraph","fullMainHeading","_context12","para","some","mainHeading","s","sort","aNumbers","num","parseInt","bNumbers","Math","max","isNaN","updateCategoryDisplay","formatClosingChecklistData","copyToClipboard","_x0","category","isArray","pairs","pair","selections","formattedData","sectionKeyParts","part","mainHeadingKeyParts","title","sections","JSON","stringify","contentElement","querySelector","innerHTML","entry","keySpan","valueSpan","formattedPair","_x4","_copyToClipboard","_callee13","_context15","showCopyMessage","successful","copyMessage","textContent","color","setTimeout","clearCurrentContent","_clearCurrentContent","_callee14","_context16","Office","onReady","info","host","HostType","logStyleContentButton","reloadButton","dismissButton","dealOptions","onclick","onchange","setInterval","loginButton","loginModal","loginForm","closeModal","loginError","addEventListener","authToken","localStorage","removeItem","event","target","_ref","_callee","userName","password","_context","preventDefault","handleLogin","reset","_x","selectedEnvironment","loginResponseData","_x5","_x6","_handleLogin","_callee15","environmentSelect","apiUrl","response","_data$userDetails","dealNames","_dealSelect","_t9","_context17","fetch","method","headers","ok","json","setItem","token","userDetails","tenantId","deal","option","_id","name","status","_callee2","messageElement","showMessage","selectedDealName","loginResponseDataString","selectedEnvironmentValue","_loginResponseData","dealsArray","matchedDeal","matchedDealSettingUUID","baseUrl","finalData","dealSettingData","permissionArray","requiredPermissions","areaPermissions","dealUuid","responseData","errorData","_response","_responseData","_errorData","formattedCategoryData","_response2","_responseData2","_errorData2","_t","_context2","id","width","padding","textAlign","transition","parentNode","insertBefore","message","isError","backgroundColor","opacity","cursor","options","selectedIndex","getItem","parse","deal_user_setting","permissions","permission","includes","uuid","tenant","dealId","environment","reduce","acc","URL"],"sourceRoot":""}